@inject IProductService ProductService

<ul class="list-unstyled">
    @foreach (var product in CategoryID == null ? ProductService.Products : ProductService.Products.Where(p => p.CategoryID == CategoryID))
	{
		 <li class="media my-3">
             <div class="media-img-wrapper mr-2">
                 <a href="/product/@product.ID">
                     <img src="@product.ImageLink" class="media-img" alt="@product.Title"/>
                 </a>
             </div>
             <div class="media-body">
                 <a href="/product/@product.ID">
                     <h4 class="mb-4">@product.Title</h4>
                 </a>
                 <p>@product.Descripton</p>
                 @if (product.OriginalPrice > product.Price)
                {
                        <h6 class="text-muted original-price">$@product.OriginalPrice</h6>
                }
                 <h5 class="price">
                     $@product.Price
                 </h5>
             </div>
         </li>
	}
</ul>


@code {    
    [Parameter]
    public int? CategoryID { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        await ProductService.LoadProducts();
    }
}
